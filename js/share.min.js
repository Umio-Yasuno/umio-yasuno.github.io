function toast_msg(){const msg=document.getElementById(`msg`);msg.classList.add(`toast-msg`);setTimeout(()=>{msg.classList.remove(`toast-msg`);},1500);}
async function copy_url(type){const title=document.title;const url=location.href;if(type===`url`&&navigator.share){navigator.share({title:title,url:url});return;}
const txt=(()=>{if(type===`title_url`){return `${title}\n\n${url}`;}else{return url;}})();await navigator.clipboard.writeText(txt).then(toast_msg());}
function err_tag_comple(tag_val){const err_msg=document.getElementById(`tag-comple-error`);const wrong_tag=(()=>{if(25<=tag_val.length)
return `${tag_val.substring(0,22)}...`;else
return tag_val;})();err_msg.innerHTML=`"${wrong_tag}" not found`;err_msg.classList.add(`toast-err`);setTimeout(()=>{err_msg.classList.remove(`toast-err`);},2000);}
function jump_tag(e){if(e.key!=`Enter`&&e.type!=`click`)
return;const tag_val=document.getElementById(`input-tag-comple`).value.trim().replace(/\s+/,` `);if(tag_val==``)
return;const selector=document.getElementById(`tags-list`).querySelector(`[value="${tag_val}"]`);if(!selector){err_tag_comple(tag_val);return;}
location.href=`/tags/${selector.dataset.url}/`;}
function clear_value(){document.getElementById(`input-tag-comple`).value=``;}
async function copy_code(t){const code=t.previousElementSibling.textContent;const link=t.nextElementSibling.children[0].children[0];const txt=(()=>{if(link.text&&link.href){return code+` \n\n`+link.text+` \n`+link.href;}else{return code+` \n`+location.href;}})();if(!txt)return;await navigator.clipboard.writeText(txt).then(toast_msg());}
function add_copy_code_btn(){const PreEle=document.getElementsByTagName(`pre`);for(let i=0;i<PreEle.length;i++){PreEle[i].addEventListener(`mouseover`,()=>{if(PreEle[i].nextSibling.className==`copy-code sb`)return;const btn=document.createElement(`button`);btn.classList.add(`copy-code`,`sb`);btn.setAttribute(`onclick`,`copy_code(this)`);PreEle[i].parentNode.insertBefore(btn,PreEle[i].nextSibling);});}}
add_copy_code_btn();async function gh_search(e){if(e.key!=`Enter`&&e.type!=`click`)
return;const gh_val=document.getElementById(`gh-search-val`).value.trim().replace(/\s+/g,` `);if(gh_val.length<4)return;const call=await fetch(`https://api.github.com/search/code?q=${gh_val}+repo:umio-yasuno/coelacanth-dream`,{mode:`cors`,credentials:`omit`,}).then(response=>response.json()).then(data=>data);if(call.total_count==0){not_found_list();return;}
const index=await fetch(`/index.json`).then(response=>response.json());const par=document.getElementById(`gh-search`);const list=document.createElement(`div`);list.id=`result-list`;list.classList.add(`posts`);for(let i=0;i<call.total_count;i++){if(!call.items[i])continue;const url=call.items[i].path.trim().replace(/^.?content\/?/,`/`).replace(/\.md$/,`/`);if(!index[url])continue;list.innerHTML
+=`<div class="sect-page">`
+`<a class="sect-title" href="${url}">${index[url].title}</a>`
+`<div class="sect-time-block">`
+`<time datetime="${index[url].pub}" class="time-page-update">- ${index[url].pub}`
+` Update: ${index[url].lastmod}</time>`
+`</div>`
+`</div>`;const check=document.getElementById(`result-list`);if(check){check.innerHTML=list.innerHTML;}else{par.parentNode.insertBefore(list,par.nextSibling);}}}
function not_found_list(){const par=document.getElementById(`gh-search`);const list=document.createElement(`div`);list.id=`result-list`;list.classList.add(`posts`);list.innerHTML=`<div class="sect-page">Not found.</div>`;const check=document.getElementById(`result-list`);if(check){check.innerHTML=list.innerHTML;}else{par.parentNode.insertBefore(list,par.nextSibling);}}